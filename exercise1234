
## Exercise2222---------------------------------------------------------------

## clear data and variables  
rm(list=ls())

##---------------------------------------------------------------
## Melbourne House   
##---------------------------------------------------------------
## read data 
DATA1 = read.csv(file="house_MEL.csv", header=TRUE, sep=",")

## names 
names(DATA1)

## summary
summary(DATA1)

## mean and median  
mean(DATA1$price)
median(DATA1$price)

## histogram  
hist(DATA1$price)

## histogram by ggplot2
library(ggplot2)

## (1) histogram 
ggplot(data=DATA1, aes(price)) + 
  geom_histogram(binwidth=500000, colour="black", fill="skyblue") +  
  labs(title = "Housing Prices in Melbourne", x = "Housing Price (dollars)") +
  theme(plot.title = element_text(hjust = 0.5)) 

## (2) histogram with mean and median 
v_mean = mean(DATA1$price)
v_med  = median(DATA1$price)

ggplot(data=DATA1, aes(price)) + 
  geom_histogram(binwidth=500000, colour="black", fill="skyblue") +  
  labs(title = "Housing Prices in Melbourne", x = "Housing Price (dollars)") +
  theme(plot.title = element_text(hjust = 0.5)) +
  geom_vline(xintercept = v_mean, color="red" , size=1)+
  geom_vline(xintercept = v_med,  color="blue", size=1) +
  annotate("text", x = v_mean, y = 2500, angle = 90, label = "Mean",   color = "red", vjust = 1.2, parse = TRUE)+
  annotate("text", x = v_med,  y = 5000, angle = 90, label = "Median", color = "blue", vjust = 1.2, parse = TRUE)


##---------------------------------------------------------------
## ASX  
##---------------------------------------------------------------
## read data 
DATA2 = read.csv(file="AXJO.csv", header=TRUE, sep=",")

## summary
summary(DATA2)

## data format 
DATA2$Date = as.Date(DATA2$Date, format="%Y-%m-%d")

## summary: check again 
summary(DATA2)

## time series plot 
ggplot(DATA2, aes(x=Date, y=Open)) +
  geom_line(color = "#FC4E07", size = 2) + 
  xlab("Date")
  
  
##----------------------------------------------------------
## Exercise3333--------------------------------------------
  
rm(list=ls()) ## clear data and variables  

##---------------------------------------------------------------
## Monte Carlo Simulation
##---------------------------------------------------------------
S  = 5000
R1 = rnorm(S, 5, 10)  ## mean = 5, standard deviation = 10 (variance = 10 x 10) 
R2 = rnorm(S, 2, 4)   ## mean = 2, standard deviation = 4  (variance = 4 x 4)

## distribution  
hist(R1)
hist(R2)
hist(R)

## R1
mean(R1)
var(R1)
quantile(R1, probs = 0.05)

## R2
mean(R2)
var(R2)
quantile(R2, probs = 0.05)

R = 0.5 * R1 + 0.5 * R2

## R 
mean(R)
var(R)
quantile(R, probs = 0.05)


##---------------------------------------------------------------
## Data Analysis 
##---------------------------------------------------------------
## - This package contains data sets from ISLR book.
library(ISLR)

## variables in the data set 
names(Hitters)

## summary
summary(Hitters)
summary(Hitters$Salary)

## mean (problem "NA")  
mean(Hitters$Salary)

## Remove "NA"
DATA = na.omit(Hitters)

## mean and variance 
xbar = mean(DATA$Salary)
sig2 = var(DATA$Salary)
xbar
sig2

# nonparametric bootstrap
B   = 5000
mub = c()
for (b in 1:B){
  samp_b = sample.int(nrow(DATA), replace=TRUE)
  mub    = c(mub, mean(DATA$Salary[samp_b]))
}

## histogram  
hist(mub)
sd(mub)


##=================================================
## Exercise44444------------------------------------


library(MASS)
DATA = MASS::bacteria

summary(DATA)

## y presence or absence: a factor with levels n and y.
## ap active/placebo: a factor with levels a and p.
## hilo hi/low compliance: a factor with levels hi amd lo.
## week numeric: week of test.
## ID subject ID: a factor.
## trt a factor with levels placebo, drug and drug+, a re-coding of ap and hilo.

##----------------------------------------------------------
## Data 
##----------------------------------------------------------
DATA$outcome   = (DATA$y  == "y")
DATA$treatment = (DATA$ap == "a")
summary(DATA)

##----------------------------------------------------------
## Average Treatment Effect (ATE)
##----------------------------------------------------------
##-------------
## ATE  
##-------------
y1 = as.matrix(DATA$outcome[DATA$treatment==TRUE])  ## treated group 
y0 = as.matrix(DATA$outcome[DATA$treatment==FALSE])  ## control group 
y1.mean = mean(y1) 
y0.mean = mean(y0)
ATE     = y1.mean - y0.mean
ATE

##-------------
## Bootstrap   
##-------------
B     = 1000
ATE_B = c()
for (b in 1:B){
  samp_b0 = sample.int(nrow(y0), replace=TRUE)
  samp_b1 = sample.int(nrow(y1), replace=TRUE)
  ATE_b   = mean(y1[samp_b1]) - mean(y0[samp_b0])
  ATE_B   = c(ATE_B, ATE_b)
}

## Confidence Interval 
CI95 = quantile(ATE_B, c(0.025, 0.975))
CI95
  
##-------------
## regression  
##-------------
fit = glm(outcome ~ treatment, data = DATA)
summary(fit)


##=================================================
## Exercise5555------------------------------------


rm(list=ls()) ## clear data and variables  

##-------------------------------------------------
## Advertisement  
##-------------------------------------------------
## (1) data 
AD = read.csv("Advertising.csv") 
names(AD)
summary(AD)

## (2) scatter plot and simple linear regression 
## TV
plot(AD$TV,AD$sales)
fit.a = glm(sales~TV, data = AD)
summary(fit.a)
lines(AD$TV, fit.a$fitted.values) ##linear regression 

## radio 
plot(AD$radio,AD$sales)
fit.b = glm(sales~radio, data = AD)
summary(fit.b)
lines(AD$radio, fit.b$fitted.values)

## newspaper
plot(AD$newspaper,AD$sales)
fit.c = glm(sales~newspaper, data = AD)
summary(fit.c)
lines(AD$newspaper, fit.c$fitted.values)

## (2) regression (level-level) 
fit1 = glm(sales~TV + radio + newspaper, data = AD)
summary(fit1)

## (3) regression (log-level)  
fit2 = glm(log(sales)~TV + radio + newspaper, data = AD)
summary(fit2)

## (4) regression (log-log)  
fit3 = glm( log(sales)~ log(TV) + log(radio) + log(newspaper), data = AD)
summary(fit3)

fit3 = glm( log(sales)~ log(TV) + radio + log(newspaper), data = AD)
summary(fit3)

## - deviance => R2 
1-fit3$deviance / fit3$null.deviance

## (5) regression (level-log)  
fit4 = glm( sales~ log(TV) + radio + log(newspaper), data = AD)
summary(fit4)

## (6) R2
fit5 = lm( sales~ log(TV) + radio + log(newspaper), data = AD)
summary(fit5)




##=================================================
## Exercise6666------------------------------------

##-------------------------------------------------
## Credit card   
##-------------------------------------------------
## data 
library(ISLR)
summary(Default)

## logit 
fit.logit1 = glm(default ~ student, data = Default, family = "binomial")
summary(fit.logit1)

## logit 
fit.logit2 = glm(default ~ student + balance + income, data = Default, family = "binomial")
summary(fit.logit2)


##-------------------------------------------------
## Stock Return 
##-------------------------------------------------
DATA = read.csv("dja.csv")
dja  = DATA$DJ
n    = length(dja)  ## the size of time series 

## Stock price  
plot(dja, type="l", col=4, xlab="day", ylab="DJA")
acf(dja, lwd=2)
ARdj = glm(dja[2:n] ~ dja[1:(n-1)])
summary(ARdj)

## Stock Return: AR(1) model with returns 
returns = (dja[2:n]-dja[1:(n-1)])/dja[1:(n-1)]
plot(returns, type="l", col=3, xlab="day", ylab="DJA Return")
acf(returns, lwd=2)
summary( glm(returns[2:n] ~ returns[1:(n-1)]) )

